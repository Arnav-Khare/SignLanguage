[{"C:\\Users\\SIDDHANT\\Documents\\Git\\SignLanguage\\src\\index.js":"1","C:\\Users\\SIDDHANT\\Documents\\Git\\SignLanguage\\src\\App.js":"2","C:\\Users\\SIDDHANT\\Documents\\Git\\SignLanguage\\src\\Components\\images.js":"3"},{"size":230,"mtime":1610634982928,"results":"4","hashOfConfig":"5"},{"size":3861,"mtime":1610639866709,"results":"6","hashOfConfig":"5"},{"size":1039,"mtime":1610634982925,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j1k9kk",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"C:\\Users\\SIDDHANT\\Documents\\Git\\SignLanguage\\src\\index.js",[],"C:\\Users\\SIDDHANT\\Documents\\Git\\SignLanguage\\src\\App.js",["16"],"C:\\Users\\SIDDHANT\\Documents\\Git\\SignLanguage\\src\\Components\\images.js",["17","18"],"import React from 'react';\r\nimport './Images.css';\r\n\r\nconst Images = ({text}) => {\r\n    \r\n        const wordsArray = text.split(' ')  \r\n        let eachWord =  wordsArray.map(e => {\r\n            if(e !== '')\r\n            {\r\n                const letters = e.split('');\r\n                const lettersImg = letters.map( (single) => {\r\n                    return(\r\n                            <img src={'images/'+single.toUpperCase()+'.png'} className=\"imageSize\"></img>\r\n                    )\r\n                })\r\n                return ( \r\n                        <div className=\"column\">\r\n                            <div className=\"jarvis\">{e}</div>\r\n                            {lettersImg}\r\n                        </div>\r\n                )\r\n            }\r\n        });\r\n\r\n    if(text !== \"\")\r\n    {\r\n        return (\r\n            <div className=\"imageContainer\">\r\n                {eachWord}\r\n            </div>\r\n         )\r\n    }\r\n    else\r\n    {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Images;",["19","20"],{"ruleId":"21","severity":1,"message":"22","line":8,"column":7,"nodeType":"23","messageId":"24","endLine":8,"endColumn":16},{"ruleId":"25","severity":1,"message":"26","line":7,"column":42,"nodeType":"27","messageId":"28","endLine":7,"endColumn":44},{"ruleId":"29","severity":1,"message":"30","line":13,"column":29,"nodeType":"31","endLine":13,"endColumn":100},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},"no-unused-vars","'inputText' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-global-assign","no-unsafe-negation"]